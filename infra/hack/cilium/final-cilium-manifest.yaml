apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      - ciliumcidrgroups
      - ciliuml2announcementpolicies
      - ciliumpodippools
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      - ciliuml2announcementpolicies/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
      - ciliumcidrgroups.cilium.io
      - ciliuml2announcementpolicies.cilium.io
      - ciliumpodippools.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumpodippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumpodippools
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  cnp-node-status-gc-interval: 0s
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: ""
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWEx2c1orRUVZUmJNbmtleURRZWl3ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T1RFME1UZzBNekE1V2hjTk1qWXdPVEV6TVRnMApNekE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREpINzh0WFdSOGNpYit0YnZCSmJRQzhlQXRZb3FkSDdRaXpuY1Q5Yjd1MCtNZndPMlgKc0s2U2haWE41N2ZhZU5KZVlMcGtLVXJtY2JrTEdicmZUY245bWVXYkVhNDUzNnpvbWhIVTRLOE5UbUFHZHFobAp2Sm1mbWJYaUpHbzZJeWY3M016eUtRZURwSW4wL1pyRFY2VGYxRzVZK2RkcGZRKzh1R2ZTZDkveW0rcGpvZEJrCi84QjhGdGl5clkzRE1vTEs2SktlN0ltMC9wK1lMTllrWlhRa3dTbS9rTWUweW9vWThOM015YU5XVjhmM1gwREUKWXIwcW9DQkRKemxRSXNwdmE0clFlZ3ZhYi96VzJwSDFMWFp1K2dyZmlaSUVPRjBmVVE1d1lwVE1oOGFGazM0agpjQU5Yakt0dFdrU1RNMy9tUmZOQmorV3FvWWQyNmN3YlU0T3BBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVMVUNzM1BQZnlEMUNlb0dIVU1yeHJnc2crdmN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGMlMyVVphSGYwNzBxd2ZSSW1wbkhEMUhlRkFnOTVTd1AyWWt3WVQvMzhjbmpiRVlia2N5MjkvCit3Tm9yNXVNM2QyMWw4T1pPdDNvYU9uT2xPWXNLSzhsdlIvenNOSmxML0lNV2hDdk9QazQ5aEdwME9PVjZqYnoKeDd3bkEvV2pvUVJYb1R5czl3OU0wREorM1dqQnFXalZ3RmlDaTZFdEtqdU5HemRJWFA1R281RjZxZndQb2VRZQpuVzVFWnB0bFppLzB2K2czNUFpRnRpdmlJaDZyUXZRaEZIVjMrMWdDNFcvZHF6QzBEOE9RRmFPMXZtbzBvendFClBrUnFIaVFNM3djWjYzdWRCc3ZQQ0h2bkdkQ0xocCtNaEpUejliaEhOZFBJYVdkUzN6d2tva3U3K0Z3VytkazcKUXpQakUwVXA0WlFJNVNRZG9odjNOMnVYTHVrcGlkRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeVIrL0xWMWtmSEltL3JXN3dTVzBBdkhnTFdLS25SKzBJczUzRS9XKzd0UGpIOER0Cmw3Q3Vrb1dWemVlMzJualNYbUM2WkNsSzVuRzVDeG02MzAzSi9abmxteEd1T2QrczZKb1IxT0N2RFU1Z0JuYW8KWmJ5Wm41bTE0aVJxT2lNbis5ek04aWtIZzZTSjlQMmF3MWVrMzlSdVdQblhhWDBQdkxobjBuZmY4cHZxWTZIUQpaUC9BZkJiWXNxMk53ektDeXVpU251eUp0UDZmbUN6V0pHVjBKTUVwdjVESHRNcUtHUERkek1talZsZkg5MTlBCnhHSzlLcUFnUXljNVVDTEtiMnVLMEhvTDJtLzgxdHFSOVMxMmJ2b0szNG1TQkRoZEgxRU9jR0tVeklmR2haTisKSTNBRFY0eXJiVnBFa3pOLzVrWHpRWS9scXFHSGR1bk1HMU9EcVFJREFRQUJBb0lCQUNCNHZMQUJWUmoyZ1M4OApmaXpIL3BFL0pmZU40bDFONGhLQWpSOHUzUDNJUGZKQmZ0cXZ6dStmRzdtYndNWklIWWJaVFI2Z3dCUUdwbDZSCmIrZGZzczM4QytNR2JyK3ZTa1pmb2FOaUIwRTV0eTB6K1NvNzBmMi9ubXI5Z0IwVTBmN0svbGZXb2Z6eUVzZjQKTGdWOTRBTzNVMzJRRU9SYUtiRkpnSkd0Z3YyelAxQlVUNVJ6eDJlWkJlM1VUbk9OWmZxZ2NSQk90Vm95REJZbQpYZXBpYXBsSTF0UmpDQXJFQWZubm93b2RqZ3J6RFdBSXF0aEpDZExzZ1Q0ajd1TGlpUTh6UFBtdzNWbU96eVdvCkswYldtMTNySzRBVXZHV2lqQ0RIOTZBNHFSemFiNXNnSFd0T05RQ0ZhU3ZmZUc5WllFUWxIckhKdlg5L05iQzcKVGI5R0dCVUNnWUVBNkxXVXBNVzE2SzNtSXlETlFpSWZrTTR1MG1UV0c0UHgxbjNUR1BicU0yRVV5V084TnZSVApJSUhWUjF6OHV1OTlNdzVEZ3JmQmpNRHVFbFlNK2RUU294aXFIVVloY3pVcTJEdFBOTWxPZHNiQkRIV3lKcUxICkJlTzdGTmU0bS9VWkIwTUhhYUZnR1hYTWdQTEFGN25sUE9lcFdhK3hPbGRMMzJRdVpNOVVyb01DZ1lFQTNVRGwKVXhiQVUzUVVqdnZFMmk5OFFBL0gwTFdVdFhJNFFZTmtLa2FjZnhKcVRJbkJKcmFMcTFvK2hvd0xoTlI1MkZCWQpMc1dTNHp2alF2ZjhWOW1LTEVmcTBmTFNLL1JiZ1hRK3hEREpES2t6bk02NTNkdndtOHFleThxOVB5K243bXplCnFwTS95V1U4bXM1bFU4NVpxcUZodHY0SU5EWVJDWFRwcHNUTkxXTUNnWUVBMkFHY3pXbmNWZlA5ZUVQOVkxTEwKWEIyVzVxTEUvMXQxZ3pUZVd3RHZHZXdXWUcyY2lxSTEreW1vOElvRzZmcGRpNlBFMUxSL0M0a1dNNXoraEhTaApaTlVES3hNcS80YXRrM05TTFZ4aTRldlJ6Qi8vMHM4cjBISzMrRHZaVjZLbHJkRHhNNEtnOG1FZkI5N01vZmxqCktTcWNUdXkvcExqZGE2blJTckFOR2NNQ2dZQkx5QUdEL3dQcTBaU0ZFTWp3N2xqQlhHWlZId3lMUlU3dGFZSnkKVkhNZnR2Ly9yU01pRGw0eVY1dVkyL2pLQ3ppY2xaQk9uTTlkMDFKWXlyVjhwWDhGQWJEMUxoVThodHFjc1dNYQpNWmQ3SmEwTzVXT1dFTklObWszZmdWWm1nUDBrMWRkQ1YyTCtxUlVqOU5PUjY5aWNiK0FYSEZWVkJMdTdJSGN5CjdxOVQvd0tCZ1FEWGdCbUdDdGtVMmtCU2FxVHBPMUhnOGJQaUxwakFLRGYvcHV1RnJhNWQxVzVrOXFZZkZjZFIKMy9ZK1o2V3pSMVlScGVmQ2JpajZ5NG9MTkZHOFh5bWJ4L3Q5ampsNG41U3oxRzVyU0pvLzRwK004WGd4THVpcgoxSENiSWRWSFZHN2c0b3pRcVcxT2gzYTNKMXlQdWh2KzZPeWRWY3NEVVNmaERJMkQ3bWxZeXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWEx2c1orRUVZUmJNbmtleURRZWl3ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T1RFME1UZzBNekE1V2hjTk1qWXdPVEV6TVRnMApNekE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREpINzh0WFdSOGNpYit0YnZCSmJRQzhlQXRZb3FkSDdRaXpuY1Q5Yjd1MCtNZndPMlgKc0s2U2haWE41N2ZhZU5KZVlMcGtLVXJtY2JrTEdicmZUY245bWVXYkVhNDUzNnpvbWhIVTRLOE5UbUFHZHFobAp2Sm1mbWJYaUpHbzZJeWY3M016eUtRZURwSW4wL1pyRFY2VGYxRzVZK2RkcGZRKzh1R2ZTZDkveW0rcGpvZEJrCi84QjhGdGl5clkzRE1vTEs2SktlN0ltMC9wK1lMTllrWlhRa3dTbS9rTWUweW9vWThOM015YU5XVjhmM1gwREUKWXIwcW9DQkRKemxRSXNwdmE0clFlZ3ZhYi96VzJwSDFMWFp1K2dyZmlaSUVPRjBmVVE1d1lwVE1oOGFGazM0agpjQU5Yakt0dFdrU1RNMy9tUmZOQmorV3FvWWQyNmN3YlU0T3BBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVMVUNzM1BQZnlEMUNlb0dIVU1yeHJnc2crdmN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGMlMyVVphSGYwNzBxd2ZSSW1wbkhEMUhlRkFnOTVTd1AyWWt3WVQvMzhjbmpiRVlia2N5MjkvCit3Tm9yNXVNM2QyMWw4T1pPdDNvYU9uT2xPWXNLSzhsdlIvenNOSmxML0lNV2hDdk9QazQ5aEdwME9PVjZqYnoKeDd3bkEvV2pvUVJYb1R5czl3OU0wREorM1dqQnFXalZ3RmlDaTZFdEtqdU5HemRJWFA1R281RjZxZndQb2VRZQpuVzVFWnB0bFppLzB2K2czNUFpRnRpdmlJaDZyUXZRaEZIVjMrMWdDNFcvZHF6QzBEOE9RRmFPMXZtbzBvendFClBrUnFIaVFNM3djWjYzdWRCc3ZQQ0h2bkdkQ0xocCtNaEpUejliaEhOZFBJYVdkUzN6d2tva3U3K0Z3VytkazcKUXpQakUwVXA0WlFJNVNRZG9odjNOMnVYTHVrcGlkRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQVBERElOUjh0Sm40QW1yeHZCZ2pkcGd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURreE5ERTRORE14TUZvWERUSTJNRGt4TXpFNApORE14TUZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtMZGRwT0JRd0YyaGhOU210T04KdFBESkRUY1hFZHJFb0RnbTR3aktqZ05nR3k0LzV4ZnVuVVJIVnlhRHpFeFI3WSsxVzF5Rm94TkU4ZWh5OCtKKwpLeTM0ZzZteEZCTjd3MDhnVjd2SlFaZ29PbzMwQVR2MzFnVTdiQkd3QWplUUpOSllEY0p6R201N01LbUpmWEVtCjV6aXFSbVpma1hZdDVOVnlWb1RBMEUrRWVJMjZaWDRzYU0zOFl6UVpSSWg4SkZyZ1Mzc1pmTG5IOHpvTkdVU08KajZoYzg4OVFKSGhlUTV2QTVFMTg2VjRIaEppc01MVFlSK0VrRHJCZHcrOWVJZE1ZdjhJRi9Ba0ZMZnZBZzhqUQpDallYeml0dkE2akJzQU5vaC9zLzBLRURjQ1FYclRZL25tNlVqdHRZbEQyb2JxbWJiSEQzanlkSndZNE9ZQVh3ClFLc0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUxVQ3MzUFBmeUQxQwplb0dIVU1yeHJnc2crdmN3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXQ4cUl6V2dGV2xFdmtSOGhpc1FLNnJ2OTVtMzcKYkZxUURubGdtOGRLM1RJYXdZeS9SNGFDVU80WXZXOC82NXE0enV6N1RObTRlKy94SVNseDRCam44Lzd6Vm5kRwpsVzZXKzRpbGM5dWU3MzhNTlUrSWpFeWhZNHRFL1ZsQUFGOGhXbGxFbDNxK3hPTXlpcUc4UGdhWHp3MmJTZ1BoCjBlc0htR05JbjlRK2dOVDFOZzJVVXpwUkVRand3ZnJ3ZitadU53RVpqQ2ZIcE5IbUs5UDNLQ0dzZC92ZzJDMWQKcVQwL09QaExoNWJIc1RXOHlycU5CaTM0R3Y0TFdGUWlJTkVJdlhqN0tvZjQwQkdiWi9XQXZ2ZjUyazFtV1hVVgprSjVZQnhzanlndGkra0xLUXZXLzR5dlJhUkdCc0JKTDZsVGwrWURUNmwzMFo2SnhHdFoyM3ovYnpBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb3QxMms0RkRBWGFHRTFLYTA0MjA4TWtOTnhjUjJzU2dPQ2JqQ01xT0EyQWJMai9uCkYrNmRSRWRYSm9QTVRGSHRqN1ZiWElXakUwVHg2SEx6NG40ckxmaURxYkVVRTN2RFR5Qlh1OGxCbUNnNmpmUUIKTy9mV0JUdHNFYkFDTjVBazBsZ053bk1hYm5zd3FZbDljU2JuT0twR1psK1JkaTNrMVhKV2hNRFFUNFI0amJwbApmaXhvemZ4ak5CbEVpSHdrV3VCTGV4bDh1Y2Z6T2cwWlJJNlBxRnp6ejFBa2VGNURtOERrVFh6cFhnZUVtS3d3CnROaEg0U1FPc0YzRDcxNGgweGkvd2dYOENRVXQrOENEeU5BS05oZk9LMjhEcU1Hd0EyaUgrei9Rb1FOd0pCZXQKTmorZWJwU08yMWlVUGFodXFadHNjUGVQSjBuQmpnNWdCZkJBcXdJREFRQUJBb0lCQUZEaDBUaVNFbGZRcCtkQwp0OWRtWWJ6TzdEdzJ2Y3c2cUNNYTFOZVIySk0ra0dFWXBValNYTklDNS9vZHJFRWUwdTd5cnl1MHhuY1VYMXNFCmM3QkEzbXJYSjNRSG1DUFE2LzhJM2VsSm1zVFkvYk52d1lrcG5PVStUSDVBUGVtZ01Wa3hGNnhCQTVob241TWkKeitSNDRJM1lxbHUvREh0M2NWUzdrdEljKzVieE5QWmVGVThzdzB4WGJqNm1NbU51My9hN2d3N2FOeXBrYndQeQpJV2FLc3ZFNkdqUlE2VXVmSi9sOHNLUmZBWTl5dmJMY2l0dDc3TW9jeGdLU3dUeDkzVGFpZGhyYmFCcGs3UkJoCnFCbzU5ZlB3dEFnbGRrRWh6TFpYVjBMV2FiOUkzZWlqaTRCNGZQZjJ5R2VxTUwxUnFsOUIwRWFSTmV5cVY2M1IKTkFsSThoa0NnWUVBMVhXNWNVckNpcFIzczhSZC8zQkdqL3h3bW83RDltZjRIb1UxQXpPUm9CWHppVHMrQldTbQp2ODRnTHBmUVFSbldubCs5TW0zYXJXeTNtQ3p1UnZtU29DSmlmN1pqaDk4NnVkd255VkVnZndvRUhzWkMrVkhsCmxLQXN0WHlUc1FGdS91cTJhZ3BjcitHVkNYL2FPY0Y5NXg0ZHlDdnk4ZGNuSG5EYzFORDE1WmNDZ1lFQXcxSi8KMi9VS0I4OGJnS2pPN3ZnLzMxaXN5dFpaQkZBaHUwdzNKWUJLNlR1ZGQ1V3dyNkE1TklkNFA1ZWRkaXJJYlkxaQpVZlZyTXlIMDgrMUdzdXAxdkRDMzZXOTF5UjdmaTUrT04xbUpYT1Jla0x5SjVaWTNZMDBkaHZ2eEQzcE8zTFB2CjlVTlhjdGlDWkpRQXVzZG5uNlZCd2M5Q1V0L2NRT2RPdmVtTUtBMENnWUFIbHNuakJ6OW5ZZVBubGtHcFJUcWMKLytLWS9CNW5ja2JWL3ZKbGpMM09yVGtkVmVmY2xUbUFkRG1jcm5VTyszWXY1ME40dVlNZXkxQ3pybFZDWExragp6RlVvS1RuY3FNa1R0b29MbEVETmczT21ESEp4SHNKRXlIVU9kc0ZoZDZXVWxvK3BzWGllSUMwR1MyOWN3azVSCm16Wi8yV0FuelBodEVxSW5SczZYUFFLQmdGZ1FIaTJoc1VBTUZLNVJiZHM0ZWpQTTJ6c29vVUhjanhqUEtCMzAKVmRJS1d0akwyTG1XVjdSalQ4ZjhKN1piVzdwcEFHZExhMlhHYlpaODZGOUtib0xHeEdTdktEL2hkNUNRQTZMWQo3NkcrSlJURXJMZWlucDVhNm5FdHJtWDRFdzVXNGwyR1d5c2dpc21tSVI0VlFaY3MveFRPeVd4c0dmWDVVL3MwCkRVa1JBb0dCQUtKLzlRTzd1WWpMMWdJS083akNIVzZmTTNUNzMyMGp1VmpHaTU1bGZWMFdqeXlVU2RYRk9EdEYKSHVwOHpDQmtkTGFhSmxnL3l1Zmd0dHRkUGR0dVRKcEdBSXNBS09uZFhQTU4wcFJaU3hoUmluL0xrLzcvazN3awpLNVJGeDhiUTZuRnQydU81WWtIb0hrWUQxbWVsZ3FnTzEwaHpBQzZJamRtYTl1dStNbzRvCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.10.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/operator-generic:v1.14.1@sha256:e061de0a930534c7e3f8feda8330976367971238ccafff42659f104effd4b5f7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          readinessProbe:
            failureThreshold: 5
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.10.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.10.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.10.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: cilium-clustermesh
                  optional: true
              - secret:
                  items:
                    - key: tls.key
                      path: common-etcd-client.key
                    - key: tls.crt
                      path: common-etcd-client.crt
                    - key: ca.crt
                      path: common-etcd-client-ca.crt
                  name: clustermesh-apiserver-remote-cert
                  optional: true
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                    - key: ca.crt
                      path: client-ca.crt
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
